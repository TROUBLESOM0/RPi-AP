#!/bin/bash
#
# sta-ap.start v.1
# Configuration script to convert Pi Zero W into Local Access Point
# https://gist.github.com/TROUBLESOM0/037d73d7e858ca9b37d9b27ee0591b34
#
# SSID = lilypin-ap
#
# Check script is running as root
if [[ $( whoami ) != "root" ]]
then echo -e "${Error}ERROR${Off} Must be run as sudo or root"
exit 1
else echo "Starting AP!"
fi
#
### VARIABLES ###
#################
dir=/usr/local/etc/lilypin/sta-ap
req=required
whtml=$dir/web/index.html
wlogin=$dir/web/login.php
ap=/var/www/html
sudo mkdir $dir/pre-sys-bkup
bk=$dir/pre-sys-bkup
r=$RANDOM
line=15
#
# Begin script
#
echo "checking for required files..."
if [[ -f $whtml ]]
then :
else echo "missing index.html file in /web folder"
exit 1
fi

if [[ -f $wlogin ]]
then :
else echo "missing login.php file in /web folder"
exit 1
fi

if [[ -f $dir/$req/default.wpa_supplicant.conf ]]
then :
else echo "missing default.wap_supplicant.conf for sta-ap"
exit 1
fi

if [[ -f $dir/$req/dhcpcd.conf ]]
then :
else echo "missing dhcpcd.conf for sta-ap"
exit 1
fi

if [[ -f $dir/$req/dnsmasq.conf ]]
then :
else echo "missing dnsmasq.conf for sta-ap"
exit 1
fi

if [[ -f $dir/$req/hostapd.conf ]]
then :
else echo "missing hostapd.conf for sta-ap"
exit 1
fi

# Configure web files
echo "starting WiFi login..."
if test -d $ap
then :
else echo "$ap doesn't exist; apache may be missing"
exit 1
fi
# moving web files
echo "loading web files..."

if [[ -f $ap/login.php.sta-ap.bkup && ! -f $ap/login.php ]]
then cp $wlogin $ap/login.php
fi

if [[ -f $ap/login.php && ! -f $ap/login.php.sta-ap.bkup ]]
then cp $ap/login.php $ap/login.php.sta-ap.bkup
fi

if [[ -f $ap/login.php && -f $ap/login.php.sta-ap.bkup ]]
then :
fi

if [[ ! -f $ap/login.data ]]
then :
else
rm $ap/login.data
fi


if [[ -f $ap/index.html.sta-ap.bkup && ! -f $ap/index.html ]]
then cp $whtml $ap/index.html
fi

if [[ -f $ap/index.html && ! -f $ap/index.html.sta-ap.bkup ]]
then cp $ap/index.html $ap/index.html.sta-ap.bkup
fi

if [[ -f $ap/index.html && -f $ap/index.html.sta-ap.bkup ]]
then :
fi

if [[ ! -f $ap/login.data ]]
then :
else
rm $ap/login.data
fi

# Setting permissions of web files
echo "setting permissions"
chmod u+rw,g+r,o+r $ap/index.html
chown www-data:www-data $ap/index.html
chmod u+rwx,g+rx,o+r $ap/login.php
chown www-data:www-data $ap/login.php

#wpa_supplicant
echo "backing up wpa_supplicant"
if [[ -f /etc/wpa_supplicant/wpa_supplicant.conf ]]
then mv /etc/wpa_supplicant/wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf.bkup
##### TEST KEEPING WPA-SUPPLICANT FILE ################
cp $dir/$req/default.wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
########################################################
else
echo "wpa_supplicant doesn't exist... loading default..."
cp $dir/$req/default.wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
fi
#dhcpcd
echo "backing up system files..."
cp -p /etc/dhcpcd.conf $bk
cp $dir/$req/dhcpcd.conf /etc/
#dnsmasq
cp /etc/dnsmasq.conf $bk
cp $dir/$req/dnsmasq.conf /etc/
#hostapd
if [[ -f /etc/hostapd/hostapd.conf ]]
then cp -p /etc/hostapd/hostapd.conf $bk
# making backup to add random number to SSID in hostapd.conf
cp $dir/$req/hostapd.conf $bk/hostapd.conf.tmp
sed -i "${line}s/$/$r/" "${bk}/hostapd.conf.tmp"
mv $bk/hostapd.conf.tmp /etc/hostapd/hostapd.conf
else cp $dir/$req/hostapd.conf $bk/hostapd.conf.tmp
sed -i "${line}s/$/$r/" "${bk}/hostapd.conf.tmp"
mv $bk/hostapd.conf.tmp /etc/hostapd/hostapd.conf
fi
# config hostapd
echo "setting network"
systemctl stop dhcpcd.service
systemctl stop dnsmasq
systemctl start dhcpcd.service
systemctl start dnsmasq
systemctl stop hostapd
systemctl unmask hostapd
systemctl enable hostapd
systemctl start hostapd
# DONE - REBOOT
echo "COMPLETE CONFIG"
echo "BROADCASTING   lilypin-XXX"
exit 0
#reboot now
